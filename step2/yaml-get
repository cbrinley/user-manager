#!/usr/bin/env python

import sys
import yaml
import json


class Console(dict):
  def cast(self,val):
    try: return float(val)
    except: pass
    try: return int(val)
    except: return val 

  def render(self,data):
    T = type(data)
    if T is dict: return json.dumps(data) 
    if T is list: return " ".join(data)
    return str(data)

  def get(self,key):
    data = self
    leaf = key.split(".")[-1]
    for k in key.split(".")[:-1]:
      k = self.cast(k)
      try: data = data[k]
      except: 
        print "" 
        return 1
    try:
      if leaf.endswith("()"): data = getattr(data,leaf[:-2])()
      else: data = data[leaf]
      print self.render(data)
    except:
      print ""
      return 1


def usage():
  print "Usage: yaml-get [<filename>] <any.sub.key.or.ordinal>"
  sys.exit(1)


if len(sys.argv) == 2:
  input_data = sys.stdin.read()
  key_name = sys.argv[1]
  try: data = yaml.load(input_data)
  except:
    print "could not parse input from stdin."
    print exc 
    sys.exit(1)
elif len(sys.argv) == 3:
  input_file = sys.argv[1]
  key_name = sys.argv[2]
  try: data = yaml.load(open(input_file).read())
  except Exception, exc:
    print "could not load %s, error returned:"
    print exc
    sys.exit(1)
else: usage()

console = Console()
console.update(data)
ret = console.get(key_name)
if ret is not None: sys.exit(ret)
